#
# Copyright (C) 2015 The Gravitee team (http://gravitee.io)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#         http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

### G.io APIM + Kafka - 3.20.0-alpha

version: '3'
 
networks:
  frontend:
  storage:

volumes:
  data-elasticsearch:
    driver: local
  data-mongo:
    driver: local
  # zookeeper-data:
  #   driver: local
  # zookeeper-log:
  #   driver: local
  # kafka-data:
  #   driver: local

services:

### LOCAL API MANAGEMENT

  mongodb:
    image: mongo:${MONGODB_VERSION:-4.4}
    container_name: gio_apim_mongodb
    restart: always
    volumes:
      - data-mongo:/data/db
      - ./logs/apim-mongodb:/var/log/mongodb
    networks:
      - storage
    ports:
      - "27017:27017"

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:${ELASTIC_VERSION:-7.17.8}
    container_name: gio_apim_elasticsearch
    restart: always
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cat/health?h=st" ]
      interval: 5s
      timeout: 5s
      retries: 10
    volumes:
      - data-elasticsearch:/usr/share/elasticsearch/data
    environment:
      - http.host=0.0.0.0
      - transport.host=0.0.0.0
      - xpack.security.enabled=false
      - xpack.monitoring.enabled=false
      - cluster.name=elasticsearch
      - bootstrap.memory_lock=true
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 65536
    networks:
      - storage

  gateway:
    image: graviteeio/apim-gateway:3.20.0-alpha
    container_name: gio_apim_gateway
    restart: always
    ports:
      - "8082:8082"
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-gateway:/opt/graviteeio-gateway/logs
    environment:
      - gravitee_api_jupiterMode_enabled=true
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_ratelimit_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_reporters_elasticsearch_endpoints_0=http://elasticsearch:9200
    networks:
      - storage
      - frontend

  management_api:
    image: graviteeio/apim-management-api:3.20.0-alpha
    container_name: gio_apim_management_api
    restart: always
    ports:
      - "8083:8083"
    links:
      - mongodb
      - elasticsearch
    depends_on:
      - mongodb
      - elasticsearch
    volumes:
      - ./logs/apim-management-api:/opt/graviteeio-management-api/logs
    environment:
      - gravitee_management_mongodb_uri=mongodb://mongodb:27017/gravitee?serverSelectionTimeoutMS=5000&connectTimeoutMS=5000&socketTimeoutMS=5000
      - gravitee_analytics_elasticsearch_endpoints_0=http://elasticsearch:9200
    networks:
      - storage
      - frontend

  management_ui:
    image: graviteeio/apim-management-ui:3.20.0-alpha
    container_name: gio_apim_management_ui
    restart: always
    ports:
      - "8084:8080"
    depends_on:
      - management_api
    environment:
      - MGMT_API_URL=http://localhost:8083/management/organizations/DEFAULT/environments/DEFAULT/
    volumes:
      - ./logs/apim-management-ui:/var/log/nginx
    networks:
      - frontend

  portal_ui:
    image: graviteeio/apim-portal-ui:3.20.0-alpha
    container_name: gio_apim_portal_ui
    restart: always
    ports:
      - "8085:8080"
    depends_on:
      - management_api
    environment:
      - PORTAL_API_URL=http://localhost:8083/portal/environments/DEFAULT
    volumes:
      - ./logs/apim-portal-ui:/var/log/nginx
    networks:
      - frontend

### EVENT-DRIVEN : KAFKA

  # redpanda-console:
  #   image: vectorized/console:v2.1.1
  #   container_name: gio_redpanda_console
  #   hostname: redpanda-console
  #   depends_on:
  #     - zookeeper
  #     - kafka
  #     - schema-registry
  #     - connect
  #   environment:
  #     KAFKA_BROKERS: kafka:9092
  #     CONFIG_FILEPATH: /config/config.yaml
  #   ports:
  #     - 8080:8080
  #   volumes:
  #     - ./config/redpanda-console/config.yaml:/config/config.yaml
  #   links:
  #     - kafka
  #     - schema-registry
  #     - connect
  #   networks:
  #     - storage
  #     - frontend

  # zookeeper:
  #   image: confluentinc/cp-zookeeper
  #   volumes:
  #     - zookeeper-data:/var/lib/zookeeper/data:Z
  #     - zookeeper-log:/var/lib/zookeeper/log:Z
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: '2181'
  #     ZOOKEEPER_ADMIN_ENABLE_SERVER: 'false'
  #   networks:
  #     - storage

  # kafka:
  #   image: confluentinc/cp-kafka
  #   volumes:
  #     - kafka-data:/var/lib/kafka/data:Z
  #   depends_on:
  #     - zookeeper
  #   healthcheck:
  #     test: nc -z localhost 9092 || exit -1
  #     interval: 5s
  #     timeout: 10s
  #     retries: 10
  #   environment:
  #     KAFKA_BROKER_ID: '0'
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_NUM_PARTITIONS: '12'
  #     KAFKA_COMPRESSION_TYPE: 'gzip'
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: '1'
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: '1'
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: '1'
  #     KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
  #     KAFKA_CONFLUENT_SUPPORT_METRICS_ENABLE: 'false'
  #     KAFKA_JMX_PORT: '9091'
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
  #     KAFKA_AUTHORIZER_CLASS_NAME: 'kafka.security.authorizer.AclAuthorizer'
  #     KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: 'true'
  #   links:
  #     - zookeeper
  #   ports:
  #     - 9092:9092
  #   networks:
  #     - storage

  # schema-registry:
  #   image: confluentinc/cp-schema-registry
  #   depends_on:
  #     - kafka
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'PLAINTEXT://kafka:9092'
  #     SCHEMA_REGISTRY_HOST_NAME: 'schema-registry'
  #     SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
  #     SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL: 'INFO'
  #   networks:
  #     - storage

  # connect:
  #   image: confluentinc/cp-kafka-connect
  #   depends_on:
  #     - kafka
  #     - schema-registry
  #   environment:
  #     CONNECT_BOOTSTRAP_SERVERS: 'kafka:9092'
  #     CONNECT_REST_PORT: '8083'
  #     CONNECT_REST_LISTENERS: 'http://0.0.0.0:8083'
  #     CONNECT_REST_ADVERTISED_HOST_NAME: 'connect'
  #     CONNECT_CONFIG_STORAGE_TOPIC: '__connect-config'
  #     CONNECT_OFFSET_STORAGE_TOPIC: '__connect-offsets'
  #     CONNECT_STATUS_STORAGE_TOPIC: '__connect-status'
  #     CONNECT_GROUP_ID: 'kafka-connect'
  #     CONNECT_KEY_CONVERTER_SCHEMAS_ENABLE: 'true'
  #     CONNECT_KEY_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
  #     CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8085'
  #     CONNECT_VALUE_CONVERTER_SCHEMAS_ENABLE: 'true'
  #     CONNECT_VALUE_CONVERTER: 'io.confluent.connect.avro.AvroConverter'
  #     CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: 'http://schema-registry:8085'
  #     CONNECT_INTERNAL_KEY_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
  #     CONNECT_INTERNAL_VALUE_CONVERTER: 'org.apache.kafka.connect.json.JsonConverter'
  #     CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: '1'
  #     CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: '1'
  #     CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: '1'
  #     CONNECT_PLUGIN_PATH: ' /usr/share/java/'
  #   networks:
  #     - storage
